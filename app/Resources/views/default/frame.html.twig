{% extends 'base.html.twig' %}
{% block title %}MyPhotoFrameOnline.com - Frame uploaden{% endblock %}

{% block body %}
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.12.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/1.7.20/fabric.js"></script>

    {% for frame in frames %}
        <!-- Frame panel -->
        <div class="col-md-10 col-md-offset-1">
            <div class="panel panel-primary" >
                <div class="panel-heading">
                    <div class="panel-title pull-left">
                        <input type="file" id="imageLoader" name="imageLoader" accept="image/*"  />
                    </div>
                    <div class="pull-right"> <a href="#" id="imageSaver" class="btn btn-default"><span class="glyphicon glyphicon-save"></span> Opslaan</a></div>
                    <div class="pull-right" style="margin-right: 10px;"> <a href="#" id="remove" class="btn btn-default"><span class="glyphicon glyphicon-trash"></span> Verwijderen</a></div>
                    <div class="clearfix"></div>
                </div>
                <!-- Panel body with canvas -->
                <div class="panel-body">
                    <canvas id="imageCanvas" width="{{  frame.imageWidth + 30 }}px" height="{{ frame.imageHeight + 30}}px" style="border: 1px solid #e7e7e7;"></canvas>
                </div>
            </div>
        </div>

        <!-- Load JS with twig -->
        <script>
            // Load image from URL
            fabric.Image.fromURL('{{ asset('uploads/' ~ frame.imageName ) }}', function(myImg) {
                var img1 = myImg.set({ left: 15, top: 15 ,width:{{ frame.imageWidth }},height:{{ frame.imageHeight}}    });
                canvas.add(img1);
            });

            // Save image and download
            function saveImage(e) {
                this.href = canvas.toDataURL({
                    format: 'jpeg',
                    quality: 1.0
                });
                this.download = '{{ frame.name }}.png'}
        </script>
    {% endfor %}

{% endblock %}
